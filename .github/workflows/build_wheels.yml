name: Build Python Wheels for Release

on:
  workflow_dispatch:

jobs:
  build_windows_wheels:
    name: Build wheels on windows
    runs-on: windows-latest
    strategy:
      matrix:
        python: [cp37, cp38, cp39, cp310, cp311, cp312]

    steps:
      - uses: actions/checkout@v3

      - name: Git config for fetching pull requests
        run: |
          git config --global --add remote.origin.fetch +refs/pull/*/merge:refs/remotes/pull/*

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-win*
        with:
          package-dir: ${{github.workspace}}/wrappers/python/

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_macos_wheels:
    name: Build wheels on mac
    runs-on: macos-latest
    strategy:
      matrix:
        python: [cp39, cp310, cp311, cp312, pp39, pp310]

    steps:
      - uses: actions/checkout@v3

      - name: Git config for fetching pull requests
        run: |
          git config --global --add remote.origin.fetch +refs/pull/*/merge:refs/remotes/pull/*

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-macosx*
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ENVIRONMENT_MACOS : MACOSX_DEPLOYMENT_TARGET=10.15
          CIBW_BEFORE_ALL : |
            brew reinstall gcc

            print -v version /usr/local/opt/gcc@<->(n[-1])
            version=${version#*@}
            for file in /usr/local/opt/gcc@${version}/bin/*-${version}(*); do
                tail=${file:t}
                ln -sf ${file} /usr/local/bin/${tail%-*}
            done
            export CXX=/usr/local/bin/g++
            export CC=/usr/local/bin/gcc
        with:
          package-dir: ${{github.workspace}}/wrappers/python/

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_manylinux_wheels:
    name: Build wheels on manylinux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [cp37, cp38, cp39, cp310, cp311, cp312, pp39, pp310]

    steps:
      - uses: actions/checkout@v3

      - name: Git config for fetching pull requests
        run: |
          git config --global --add remote.origin.fetch +refs/pull/*/merge:refs/remotes/pull/*

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-manylinux*
          CIBW_BEFORE_ALL: yum makecache && yum -y install devtoolset-10-libatomic-devel
        with:
          package-dir: ${{github.workspace}}/wrappers/python/

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_musllinux_wheels:
    name: Build wheels on musllinux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [cp37, cp38, cp39, cp310, cp311, cp312]

    steps:
      - uses: actions/checkout@v3

      - name: Git config for fetching pull requests
        run: |
          git config --global --add remote.origin.fetch +refs/pull/*/merge:refs/remotes/pull/*

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-musllinux*
        with:
          package-dir: ${{github.workspace}}/wrappers/python/

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl