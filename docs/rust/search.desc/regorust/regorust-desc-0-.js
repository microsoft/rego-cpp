searchState.loadedDescShard("regorust", 0, "Interface for the Rego interpreter.\nInterface for Rego Node objects.\nEnumeration of different kinds of Rego Nodes that can be …\nRepresents the value of a Rego Node.\nInterface for the Rego output.\nAdds a base document from a string.\nAdds a base document from a file.\nAdds a Rego module from a string.\nAdds a Rego module from a file.\nReturns the raw child node at a particular index.\nAttempts to return the binding for the given variable name.\nAttempts to return the binding for the given variable name.\nReturns the build information as a string.\nAttempts to return the expressions at a given result index.\nAttempts to return the expressions at a given result index.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns whether the Rego interpreter is in debug mode.\nReturns whether the interpreter will forward errors thrown …\nReturns whether the Rego interpreter will perform …\nLooks up an index in an array.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the child nodes.\nReturns the node as a JSON string.\nThe kind of this node.\nReturns a human-readable string representation of the node …\nLooks up a key in an object or a set.\nCreates a new Rego interpreter.\nReturns whether the output is ok.\nThis method performs a query against the current set of …\nAdds a base document from the specified string.\nAdds a base document from the file at the specified path.\nAdds a module (e.g. virtual document) from the specified …\nAdds a module (e.g. virtual document) from the file at the …\nFrees a Rego interpreter.\nFrees a Rego output.\nGets the debug mode of the interpreter.\nReturns the most recently thrown error.\nGets whether strict built-in errors are enabled.\nGets whether well-formed checks are enabled.\nAllocates and initializes a new Rego interpreter.\nAllocates and initializes a new V1 Rego interpreter.\nReturns the child node at the specified index.\nPopulate a buffer with the JSON representation of the node.\nReturns the number of bytes needed to store a 0-terminated …\nReturns the number of children of the node.\nReturns an enumeration value indicating the nodes type.\nReturns the name of the node type as a human-readable …\nPopulate a buffer with the node value.\nReturns the number of bytes needed to store a 0-terminated …\nReturns the bound value for a given variable name at the …\nReturns the bound value for a given variable name.\nReturns a node containing a list of terms resulting from …\nReturns a node containing a list of terms resulting from …\nReturns the node containing the output of the query.\nReturns whether the output is ok.\nReturns the number of results in the output.\nReturns the output represented as a human-readable string.\nPerforms a query against the current base and virtual …\nSets the debug mode of the interpreter.\nSets the path to the debug directory.\nSets the current input document from the specified string.\nSets the current input document from the file at the …\nSets the current input document from the specified string.\nSets the level of logging.\nSets the level of logging.\nSets whether the built-ins should throw errors.\nSets the location where rego-cpp will look for timezone …\nSets whether to perform well-formed checks after each …\nSets whether the Rego interpreter is in debug mode.\nSets the path to the directory where the Rego interpreter …\nSets the input JSON expression from a string.\nSets the input JSON expression from a file.\nSets the level of logging produced by the library.\nSets whether the interpreter will forward errors thrown by …\nSets the path to the TZData directory.\nSets whether the Rego interpreter will perform …\nReturns the number of results in the output.\nReturns the number of child nodes.\nThe number of children of this node.\nReturns the output node.\nReturns the output as a JSON-encoded string.\nReturns the value of the node.")