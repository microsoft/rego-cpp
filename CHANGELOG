# Changelog

## 2023-09-07 - Version 0.3.3
Adding a C API.

**New Features**
- `rego_c.h` contains a C API for the library
- `examples/c` contains an example that builds an interpreter using the C API

**Breaking Change**
The project was incorrectly configured to set the PUBLIC CMake build directory
to `include/rego` instead of `include`. This meant that projects consuming the
library using CMake FetchContent would include header files without a `rego/`
prefix, which would cause problems long term. This has been fixed, but as a result
any projects using the library via CMake FetchContent will need to update their
`#include` statements to include the `rego/` prefix.

## 2023-09-03 - Version 0.3.2
Adding tests based upon the Confidential ACI Rego framework.

**New Features**
- `aci.yaml` test suite
- Test cases can now specify modules using filenames

**Bug fixes**
- Long arithmetic expressions which are split over multiple lines are now
  correctly parsed.
- A few fuzzer errors have been resolved

## 2023-09-03 - [Version 0.3.1](https://github.com/microsoft/scenepic/releases/tag/v0.3.1)
Adding further builtins and test coverage, plus some minor
refactoring.

Adds the `bits`, `casts`, `types` builtins. Also adds the `regex`
builtins with the exception of `regex.globs_match`, which we will
add later along with the `globs` builtins.

**New Features**
- `bits` builtins
- `casts` builtins
- `types` builtins
- `regex` builtins (w/out `regex.globs_match`)
- Miscellaneous builtins
  * `any`
  * `all`

**New Test Coverage**
- `any`
- `all`
- `bitsand`
- `bitsnegate`
- `bitsor`
- `bitsshiftleft`
- `bitsshiftright`
- `bitsxor`
- `casts`
- `regexfind`
- `regexfindallstringsubmatch`
- `regexisvalid`
- `regexmatch`
- `regexreplace`
- `regexsplit`
- `regexmatchtemplate`

**Improvements**
- `unwrap_arg` and the associated `UnwrapOpt` struct provide a
  straightforward way to unwrap arguments for built-ins while producing
  the expected error messages for type mismatch.
- `unwrap` provides a set-based way to do optional unwrapping of terms.

## 2023-09-02 - [Version 0.3.0](https://github.com/microsoft/scenepic/releases/tag/v0.3.0)
Minor release. From this point the implementation passes the Rego
test suite and can be considered a compatible Rego implementation.

Adds the `semver`, `objects`, and `units` builtins.

**New Features**
- `semver` builtins
- `objects` builtins
- `units` builtins
- Miscellaneous builtins
  * `cast_array`
  * `cast_set`
  * `opa.runtime`
  * `json.marshal`
  * `time.now_ns`

**New Test Coverage**
- `assignments`
- `baseandvirtualdocs`
- `completedoc`
- `compositereferences`
- `comprehensions`
- `containskeyword`
- `dataderef`
- `defaultkeyword`
- `disjunction`
- `elsekeyword`
- `embeddedvirtualdoc`
- `eqexpr`
- `evaltermexpr`
- `every`
- `example`
- `fix1863`
- `functionerrors`
- `functions`
- `indirectreferences`
- `inputvalues`
- `negation`
- `nestedreferences`
- `object*`
- `partialdocconstants`
- `partialiter`
- `partialobjectdoc`
- `partialsetdoc`
- `refheads`
- `semver*`
- `subset`
- `toarray`
- `topdowndynamicdispatch`
- `toset`
- `type`
- `undos`
- `units`
- `varreferences`
- `virtualdocs`
- `withkeyword`


**Bug Fixes**
- A great many implementation details exposed by testing

## 2023-08-12 - Version 0.2.6
Adding the `aggregates`, `arrays`, and `strings` builtins.

**New Features**
- `aggregates` builtins
- `arrays` builtins
- `strings` builtins
- The library now supports arbitrary precision integers

**New Test Coverage**
- `aggregates`
- `array`
- `comparisonexpr`
- `compositebasedereference`
- `helloworld`
- `indexing`
- `intersection`
- `replacen`
- `sprintf`
- `strings`
- `trim`
- `trimleft`
- `trimprefix`
- `trimright`
- `trimspace`
- `trimsuffix`
- `union`

**Bug Fixes**
- Multiple implementation details exposed by testing


## 2023-08-12 - Version 0.2.5
Adding the `numbers` built-ins.

**New Features**
- `numbers` built-ins have been added
- The library now supports arbitrary precision integers

**Test Coverage**
- `arithmetic`
- `numbersrange`
- `rand`
- `sets`

**Bug Fixes**
- Multiple implementation details exposed by testing


## 2023-08-12 - Version 0.2.4
Adding a test driver that can execute OPA Rego-style YAML test files against the
`regocpp` interpreter.

**New Features**
- The `rego_test` driver is a tool that can process OPA Rego-style test case YAML files.

**Bug Fixes**
- Fixed an issue with assignment of arrays and objects to local variables.

**Improvements**
- All existing tests have been converted to use the test driver

## [2023-08-08 - Version 0.2.3](https://github.com/microsoft/scenepic/releases/tag/v0.2.3)
Adding the remainder of the missing language features, bringing the implementation fully
compliant with the published v0.55.0 grammar.

**New Features**
- Array, Set, and Object comprehensions
- `every` keyword
- `import` support
- `with` keyword
- Basic built-in framework in place. Added some builtins as well:
  * `print`
  * `startswith`
  * `endswith`
  * `count`
  * `to_number`
  * `union`
  * `intersection`
- `bin-infix` support
- `ref` package names

**Bug fixes**
- Nested enumeration was not working properly. This has been fixed.

**Improvements**
- Turning on unification logging can be done on the command line (no recompile needed)
- Passes have been broken out for better comprehensibility
- Build time has been reduced

## [2023-07-11 - Version 0.2.2](https://github.com/microsoft/scenepic/releases/tag/v0.2.2)
Adding the `in`, `if`, `contains`, and `else` keywords.

**New Features**
- Added future keyword support to the runtime
- Added `in`, `if`, `contains`, and `else` keywords to the runtime
- Added partial set rule construction
- Added partial object rule construction

**Bug fixes**
- Else rule bodies were not previously handled correctly when the else keyword
  was omitted. This has been fixed.
- `ExprCall` nodes can now (correctly) be a `RefHead`.

**Improvements**
- Function calls are now represented interally via a `ExprCall` node as opposed to
  a `RefArgCall` node, to better reflect the target grammar.

## [2023-06-27 - Version 0.2.1](https://github.com/microsoft/scenepic/releases/tag/v0.2.1)
Addressing various minor improvements, bugs, and documentation issues.

**Bug fixes**
- Fixed a segfault when an input, data, or module file did not exist
- Fixed a segfault when a lookdown returns zero definitions
- Fixed various typos and errors in the documentation
- Fixed a potential infinite rewrite loop in the RuleBody pass

**Improvements**
- Rule values will no longer always be `UnifyBody` nodes but will be `Term` nodes
  in cases when the rule returns a constant value.
- The code now uses the well-formed child indexing wherever possible for increased
  robustness.


## [2023-06-21 - Version 0.2.0](https://github.com/microsoft/scenepic/releases/tag/v0.2.0)
Initial Release.